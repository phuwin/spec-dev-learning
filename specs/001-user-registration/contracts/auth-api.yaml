openapi: 3.0.3
info:
  title: User Registration API
  description: API for user registration and authentication
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.example.com/api
    description: Production server

paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Create a new user account with email and password
      operationId: registerUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            examples:
              valid_request:
                summary: Valid registration request
                value:
                  email: "user@example.com"
                  password: "SecurePass123!"
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
              examples:
                success_response:
                  summary: Successful registration
                  value:
                    user:
                      id: 1
                      email: "user@example.com"
                      created_at: "2025-01-27T10:30:00Z"
                    token: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Email format error
                  value:
                    error:
                      code: "INVALID_EMAIL_FORMAT"
                      message: "Email format is invalid"
                weak_password:
                  summary: Password strength error
                  value:
                    error:
                      code: "WEAK_PASSWORD"
                      message: "Password must be at least 8 characters with uppercase, lowercase, number, and special character"
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                email_exists:
                  summary: Email already registered
                  value:
                    error:
                      code: "EMAIL_ALREADY_EXISTS"
                      message: "An account with this email already exists"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_error:
                  summary: Server error
                  value:
                    error:
                      code: "INTERNAL_ERROR"
                      message: "An internal error occurred"

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          description: User's email address
          example: "user@example.com"
        password:
          type: string
          minLength: 8
          maxLength: 128
          description: User's password
          example: "SecurePass123!"
      additionalProperties: false

    RegisterResponse:
      type: object
      required:
        - user
        - token
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          description: JWT authentication token
          example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."

    User:
      type: object
      required:
        - id
        - email
        - created_at
      properties:
        id:
          type: integer
          description: Unique user identifier
          example: 1
        email:
          type: string
          format: email
          description: User's email address
          example: "user@example.com"
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
          example: "2025-01-27T10:30:00Z"

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Error code
              enum:
                - VALIDATION_ERROR
                - EMAIL_ALREADY_EXISTS
                - INVALID_EMAIL_FORMAT
                - WEAK_PASSWORD
                - INTERNAL_ERROR
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "Email format is invalid"
            details:
              type: object
              description: Additional error details
              additionalProperties: true

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication

security:
  - BearerAuth: []
